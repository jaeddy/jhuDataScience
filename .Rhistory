yaxis = list(title = "Frequency"))
p <- powerDat %>%
ggplot(aes(x = Global_active_power)) +
geom_histogram(binwidth = 0.5) +
xlab("Global Active Power (kilowatts)") +
ylab("Frequency") +
ggtitle("Global Active Power")
p
ggplotly(p)
# Make plot 2
with(powerDat, {
plot(datetime, Global_active_power,
type = "n",
ylab = "Global Active Power (kilowatts)",
xlab = "")
lines(datetime, Global_active_power)
})
powerDat %>%
plot_ly(x = datetime, y = Global_active_power) %>%
layout(yaxis = list(title = "Global Active Power (kilowatts)"),
xaxis = list(title = "",
nticks = 3))
lims <- c(powerDat$datetime[1], powerDat$datetime[length(powerDat$datetime)])
p <- powerDat %>%
ggplot(aes(x = datetime, y = Global_active_power)) +
geom_line() +
xlab("") +
ylab("Global Active Power (kilowatts)") +
scale_x_datetime(date_breaks = "days",
date_labels = "%A")
p
ggplotly(p) %>%
layout(line = list(width = 0.5),
xaxis = list(title = "",
nticks = 3))
# Make plot 3
par(bg = "transparent")
with(powerDat, {
plot(datetime, Sub_metering_1,
type = "n",
ylab = "Energy sub metering",
xlab = "")
lines(datetime, Sub_metering_1)
lines(datetime, Sub_metering_2, col = "red")
lines(datetime, Sub_metering_3, col = "blue")
legend("topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
})
str(powerDat)
data("diamonds")
dens <- with(diamonds, tapply(price, INDEX = cut, density))
dens
x = unlist(lapply(dens, "[[", "x"))
x
dens
str(powerDat)
powerDat %>%
plot_ly(x = datetime, y = Sub_metering_1) %>%
layout(yaxis = list(title = "Energy sub metering"),
xaxis = list(title = "",
nticks = 3))
powerDat %>%
plot_ly(x = datetime, y = Sub_metering_1) %>%
layout(yaxis = list(title = "Energy sub metering"),
xaxis = list(title = "",
nticks = 3)) %>%
add_trace(y = Sub_metering_2)
powerDat %>%
plot_ly(x = datetime, y = Sub_metering_1, name = "Sub_metering_1") %>%
layout(yaxis = list(title = "Energy sub metering"),
xaxis = list(title = "",
nticks = 3)) %>%
add_trace(y = Sub_metering_2, name = "Sub_metring_2")
powerDat %>%
plot_ly(x = datetime, y = Sub_metering_1, name = "Sub_metering_1") %>%
layout(yaxis = list(title = "Energy sub metering"),
xaxis = list(title = "",
nticks = 3)) %>%
add_trace(y = Sub_metering_2, name = "Sub_metering_2")
powerDat %>%
plot_ly(x = datetime, y = Sub_metering_1, name = "Sub_metering_1") %>%
layout(yaxis = list(title = "Energy sub metering"),
xaxis = list(title = "",
nticks = 3)) %>%
add_trace(y = Sub_metering_2, name = "Sub_metering_2") %>%
add_trace(y = Sub_metering_3, name = "Sub_metering_3")
# Make plot 3
par(bg = "transparent")
with(powerDat, {
plot(datetime, Sub_metering_1,
type = "n",
ylab = "Energy sub metering",
xlab = "")
lines(datetime, Sub_metering_1)
lines(datetime, Sub_metering_2, col = "red")
lines(datetime, Sub_metering_3, col = "blue")
legend("topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
})
# Make plot 3
with(powerDat, {
plot(datetime, Sub_metering_1,
type = "n",
ylab = "Energy sub metering",
xlab = "")
lines(datetime, Sub_metering_1)
lines(datetime, Sub_metering_2, col = "red")
lines(datetime, Sub_metering_3, col = "blue")
legend("topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
})
dev.off()
# Make plot 3
with(powerDat, {
plot(datetime, Sub_metering_1,
type = "n",
ylab = "Energy sub metering",
xlab = "")
lines(datetime, Sub_metering_1)
lines(datetime, Sub_metering_2, col = "red")
lines(datetime, Sub_metering_3, col = "blue")
legend("topright", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
})
powerDat %>%
plot_ly(x = datetime, y = Sub_metering_1, name = "Sub_metering_1") %>%
layout(yaxis = list(title = "Energy sub metering"),
xaxis = list(title = "",
nticks = 3),
legend = list(x = 0.9, y = 1)) %>%
add_trace(y = Sub_metering_2, name = "Sub_metering_2") %>%
add_trace(y = Sub_metering_3, name = "Sub_metering_3")
powerDat %>%
plot_ly(x = datetime, y = Sub_metering_1, name = "Sub_metering_1") %>%
layout(yaxis = list(title = "Energy sub metering"),
xaxis = list(title = "",
nticks = 3),
legend = list(x = 0.9, y = 1,
xanchor = "right")) %>%
add_trace(y = Sub_metering_2, name = "Sub_metering_2") %>%
add_trace(y = Sub_metering_3, name = "Sub_metering_3")
powerDat %>%
plot_ly(x = datetime, y = Sub_metering_1, name = "Sub_metering_1") %>%
layout(yaxis = list(title = "Energy sub metering"),
xaxis = list(title = "",
nticks = 3),
legend = list(borderwidth = 1,
xanchor = "right")) %>%
add_trace(y = Sub_metering_2, name = "Sub_metering_2") %>%
add_trace(y = Sub_metering_3, name = "Sub_metering_3")
library(reshape2)
library(reshape2)
powerDat %>%
melt(measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
library(reshape2)
powerMelt <- powerDat %>%
melt(measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
View(powerMelt)
library(reshape2)
p <- powerDat %>%
melt(measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")) %>%
ggplot(aes(x = datetime, y = value)) +
geom_line(aes(colour = variable)) +
xlab("") +
ylab("Energy sub metering") +
scale_x_datetime(date_breaks = "days",
date_labels = "%A")
p
library(reshape2)
p <- powerDat %>%
melt(measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")) %>%
ggplot(aes(x = datetime, y = value)) +
geom_line(aes(colour = variable)) +
xlab("") +
ylab("Energy sub metering") +
scale_x_datetime(date_breaks = "days",
date_labels = "%A") +
scale_colour_continuous(guide = guide_legend(title = NULL))
p
library(reshape2)
p <- powerDat %>%
melt(measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")) %>%
ggplot(aes(x = datetime, y = value)) +
geom_line(aes(colour = variable)) +
xlab("") +
ylab("Energy sub metering") +
scale_x_datetime(date_breaks = "days",
date_labels = "%A") +
scale_colour_discrete(guide = guide_legend(title = NULL))
p
?theme
library(reshape2)
p <- powerDat %>%
melt(measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")) %>%
ggplot(aes(x = datetime, y = value)) +
geom_line(aes(colour = variable)) +
xlab("") +
ylab("Energy sub metering") +
scale_x_datetime(date_breaks = "days",
date_labels = "%A") +
scale_colour_discrete(guide = guide_legend(title = NULL)) +
theme(legend.position = "top")
p
library(reshape2)
p <- powerDat %>%
melt(measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")) %>%
ggplot(aes(x = datetime, y = value)) +
geom_line(aes(colour = variable)) +
xlab("") +
ylab("Energy sub metering") +
scale_x_datetime(date_breaks = "days",
date_labels = "%A") +
scale_colour_discrete(guide = guide_legend(title = NULL)) +
theme(legend.justification = c(1, 1))
p
library(reshape2)
p <- powerDat %>%
melt(measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")) %>%
ggplot(aes(x = datetime, y = value)) +
geom_line(aes(colour = variable)) +
xlab("") +
ylab("Energy sub metering") +
scale_x_datetime(date_breaks = "days",
date_labels = "%A") +
scale_colour_discrete(guide = guide_legend(title = NULL)) +
theme(legend.justification = c(0.5, 1))
p
library(reshape2)
p <- powerDat %>%
melt(measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")) %>%
ggplot(aes(x = datetime, y = value)) +
geom_line(aes(colour = variable)) +
xlab("") +
ylab("Energy sub metering") +
scale_x_datetime(date_breaks = "days",
date_labels = "%A") +
scale_colour_discrete(guide = guide_legend(title = NULL)) +
theme(legend.position = c(0.5, 1))
p
library(reshape2)
p <- powerDat %>%
melt(measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")) %>%
ggplot(aes(x = datetime, y = value)) +
geom_line(aes(colour = variable)) +
xlab("") +
ylab("Energy sub metering") +
scale_x_datetime(date_breaks = "days",
date_labels = "%A") +
scale_colour_discrete(guide = guide_legend(title = NULL)) +
theme(legend.position = c(1, 1))
p
library(reshape2)
p <- powerDat %>%
melt(measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")) %>%
ggplot(aes(x = datetime, y = value)) +
geom_line(aes(colour = variable)) +
xlab("") +
ylab("Energy sub metering") +
scale_x_datetime(date_breaks = "days",
date_labels = "%A") +
scale_colour_discrete(guide = guide_legend(title = NULL)) +
theme(legend.justification = c(1, 1), legend.position = c(1, 0))
p
library(reshape2)
p <- powerDat %>%
melt(measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")) %>%
ggplot(aes(x = datetime, y = value)) +
geom_line(aes(colour = variable)) +
xlab("") +
ylab("Energy sub metering") +
scale_x_datetime(date_breaks = "days",
date_labels = "%A") +
scale_colour_discrete(guide = guide_legend(title = NULL)) +
theme(legend.justification = c(1, 0), legend.position = c(1, 0))
p
library(reshape2)
p <- powerDat %>%
melt(measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")) %>%
ggplot(aes(x = datetime, y = value)) +
geom_line(aes(colour = variable)) +
xlab("") +
ylab("Energy sub metering") +
scale_x_datetime(date_breaks = "days",
date_labels = "%A") +
scale_colour_discrete(guide = guide_legend(title = NULL)) +
theme(legend.justification = c(1, 1), legend.position = c(0, 1))
p
library(reshape2)
p <- powerDat %>%
melt(measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")) %>%
ggplot(aes(x = datetime, y = value)) +
geom_line(aes(colour = variable)) +
xlab("") +
ylab("Energy sub metering") +
scale_x_datetime(date_breaks = "days",
date_labels = "%A") +
scale_colour_discrete(guide = guide_legend(title = NULL)) +
theme(legend.justification = c(0, 1), legend.position = c(0, 1))
p
library(reshape2)
p <- powerDat %>%
melt(measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")) %>%
ggplot(aes(x = datetime, y = value)) +
geom_line(aes(colour = variable)) +
xlab("") +
ylab("Energy sub metering") +
scale_x_datetime(date_breaks = "days",
date_labels = "%A") +
scale_colour_discrete(guide = guide_legend(title = NULL)) +
theme(legend.justification = c(1, 1), legend.position = c(1, 1))
p
ggplotly(p)
library(reshape2)
p <- powerDat %>%
melt(measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")) %>%
ggplot(aes(x = datetime, y = value)) +
geom_line(aes(colour = variable)) +
xlab("") +
ylab("Energy sub metering") +
scale_x_datetime(date_breaks = "days",
date_labels = "%A") +
theme(legend.justification = c(1, 1), legend.position = c(1, 1))
p
ggplotly(p)
library(reshape2)
p <- powerDat %>%
melt(measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")) %>%
ggplot(aes(x = datetime, y = value)) +
geom_line(aes(colour = variable)) +
xlab("") +
ylab("Energy sub metering") +
scale_x_datetime(date_breaks = "days",
date_labels = "%A") +
scale_colour_discrete(guide = guide_legend(title = NULL)) +
theme(legend.justification = c(1, 1), legend.position = c(1, 1))
p
lims <- c(powerDat$datetime[1], powerDat$datetime[length(powerDat$datetime)])
p <- powerDat %>%
ggplot(aes(x = datetime, y = Global_active_power)) +
geom_line() +
xlab("") +
ylab("Global Active Power (kilowatts)") +
scale_x_datetime(date_breaks = "days",
date_labels = "%A")
p
ggplotly(p) %>%
layout(line = list(width = 0.5),
xaxis = list(title = "",
nticks = 3))
ggplotly(p)
library(reshape2)
p <- powerDat %>%
melt(measure.vars = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3")) %>%
ggplot(aes(x = datetime, y = value)) +
geom_line(aes(colour = variable)) +
xlab("") +
ylab("Energy sub metering") +
scale_x_datetime(date_breaks = "days",
date_labels = "%A") +
scale_colour_discrete(guide = guide_legend(title = NULL)) +
theme(legend.justification = c(1, 1), legend.position = c(1, 1))
p
ggplotly(p)
# Make plot 4
par(mfrow = c(2, 2), bg = "transparent")
with(powerDat, {
# panel 1 (top left)
plot(datetime, Global_active_power,
type = "n",
ylab = "Global Active Power",
xlab = "")
lines(datetime, Global_active_power)
# panel 2 (top right)
plot(datetime, Voltage,
type = "n",
ylab = "Voltage")
lines(datetime, Voltage)
# panel 3 (bottom left)
plot(datetime, Sub_metering_1,
type = "n",
ylab = "Energy sub metering",
xlab = "")
lines(datetime, Sub_metering_1)
lines(datetime, Sub_metering_2, col = "red")
lines(datetime, Sub_metering_3, col = "blue")
legend("topright", bty = "n", lty = 1, col = c("black", "red", "blue"),
legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
# panel 4 (bottom right)
plot(datetime, Global_reactive_power,
type = "n")
lines(datetime, Global_reactive_power)
})
powerDat %>%
plot_ly(x = datetime, y = Sub_metering_1, name = "Sub_metering_1") %>%
layout(yaxis = list(title = "Energy sub metering"),
xaxis = list(title = "",
nticks = 3),
legend = list(borderwidth = 1,
xanchor = "right")) %>%
add_trace(y = Sub_metering_2, name = "Sub_metering_2") %>%
add_trace(y = Sub_metering_3, name = "Sub_metering_3")
powerDat %>%
subplot(
plot_ly(x = Global_active_power,
type = "histogram", autobinx = FALSE,
xbins = list(start = 0, end = 8.5, size = 0.5)) %>%
layout(title = "Global Active Power",
xaxis = list(title = "Global Active Power (kilowatts)"),
yaxis = list(title = "Frequency")),
plot_ly(x = datetime, y = Global_active_power) %>%
layout(yaxis = list(title = "Global Active Power (kilowatts)"),
xaxis = list(title = "",
nticks = 3)),
plot_ly(x = datetime, y = Sub_metering_1, name = "Sub_metering_1") %>%
layout(yaxis = list(title = "Energy sub metering"),
xaxis = list(title = "",
nticks = 3),
legend = list(borderwidth = 1,
xanchor = "right")) %>%
add_trace(y = Sub_metering_2, name = "Sub_metering_2") %>%
add_trace(y = Sub_metering_3, name = "Sub_metering_3")
)
powerDat %>%
subplot(
plot_ly(., x = Global_active_power,
type = "histogram", autobinx = FALSE,
xbins = list(start = 0, end = 8.5, size = 0.5)) %>%
layout(title = "Global Active Power",
xaxis = list(title = "Global Active Power (kilowatts)"),
yaxis = list(title = "Frequency")),
plot_ly(., x = datetime, y = Global_active_power) %>%
layout(yaxis = list(title = "Global Active Power (kilowatts)"),
xaxis = list(title = "",
nticks = 3)),
plot_ly(., x = datetime, y = Sub_metering_1, name = "Sub_metering_1") %>%
layout(yaxis = list(title = "Energy sub metering"),
xaxis = list(title = "",
nticks = 3),
legend = list(borderwidth = 1,
xanchor = "right")) %>%
add_trace(y = Sub_metering_2, name = "Sub_metering_2") %>%
add_trace(y = Sub_metering_3, name = "Sub_metering_3")
)
powerDat %>%
subplot(
plot_ly(., x = Global_active_power,
type = "histogram", autobinx = FALSE,
xbins = list(start = 0, end = 8.5, size = 0.5)) %>%
layout(title = "Global Active Power",
xaxis = list(title = "Global Active Power (kilowatts)"),
yaxis = list(title = "Frequency")),
plot_ly(., x = datetime, y = Global_active_power) %>%
layout(yaxis = list(title = "Global Active Power (kilowatts)"),
xaxis = list(title = "",
nticks = 3)),
plot_ly(., x = datetime, y = Sub_metering_1, name = "Sub_metering_1") %>%
layout(yaxis = list(title = "Energy sub metering"),
xaxis = list(title = "",
nticks = 3),
legend = list(borderwidth = 1,
xanchor = "right")) %>%
add_trace(y = Sub_metering_2, name = "Sub_metering_2") %>%
add_trace(y = Sub_metering_3, name = "Sub_metering_3"),
nrows = 2
)
powerDat %>%
subplot(
plot_ly(., x = Global_active_power,
type = "histogram", autobinx = FALSE,
xbins = list(start = 0, end = 8.5, size = 0.5)) %>%
layout(title = "Global Active Power",
xaxis = list(title = "Global Active Power (kilowatts)"),
yaxis = list(title = "Frequency")),
plot_ly(., x = datetime, y = Global_active_power) %>%
layout(yaxis = list(title = "Global Active Power (kilowatts)"),
xaxis = list(title = "",
nticks = 3)),
plot_ly(., x = datetime, y = Sub_metering_1, name = "Sub_metering_1") %>%
layout(yaxis = list(title = "Energy sub metering"),
xaxis = list(title = "",
nticks = 3),
legend = list(borderwidth = 1,
xanchor = "right")) %>%
add_trace(y = Sub_metering_2, name = "Sub_metering_2") %>%
add_trace(y = Sub_metering_3, name = "Sub_metering_3"),
margin = 0.5,
nrows = 2
)
powerDat %>%
subplot(
plot_ly(., x = Global_active_power,
type = "histogram", autobinx = FALSE,
xbins = list(start = 0, end = 8.5, size = 0.5)) %>%
layout(title = "Global Active Power",
xaxis = list(title = "Global Active Power (kilowatts)"),
yaxis = list(title = "Frequency")),
plot_ly(., x = datetime, y = Global_active_power) %>%
layout(yaxis = list(title = "Global Active Power (kilowatts)"),
xaxis = list(title = "",
nticks = 3)),
plot_ly(., x = datetime, y = Sub_metering_1, name = "Sub_metering_1") %>%
layout(yaxis = list(title = "Energy sub metering"),
xaxis = list(title = "",
nticks = 3),
legend = list(borderwidth = 1,
xanchor = "right")) %>%
add_trace(y = Sub_metering_2, name = "Sub_metering_2") %>%
add_trace(y = Sub_metering_3, name = "Sub_metering_3"),
margin = 0.05,
nrows = 2
)
?plot_ly
