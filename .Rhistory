head(trees)
fit <- lm(Volume ~ Girth + Height + Constant - 1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant - 1, trees2)
lapply(list(fit, fit2), coef)
all <- lm(Fertility ~ ., swiss)
summary(all)
summary(lm(Fertility ~ Agriculture, swiss))
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec, swiss)
efit$coefficients - all$coefficients
all$coefficients - efit$coefficients
swirl()
library(swirl)
swirl()
6
dim(InsectSprays)
head(InsectSprays, 15)
sA
summary(InsectSprays$spray)
summary(InsectSprays[, 2])
sapply(InsectSprays, class)
fit <- lm(count ~ spray, InsectSprays)
summary(fit)
summary(fit)$coef
est <- summary(fit)$coef[, 1]
mean(sA)
mean(sB)
nfit <- lm(count ~ spray - 1, InsectSprays)
summary(nfit)$coef
spray2 <- relevel(InsectSprays$spray, "C")
fit2 <- lm(count ~ spray2, InsectSprays)
summary(fit2)$coef
mean(sC)
(fit$coef[2] - fit$coef[3]) / 1.6011
dim(hunger)
948
names(hunger)
fit <- lm(Numeric ~ Year, hunger)
summary(fit)
summary(fit)$coef
lmF <- lm(Numeric ~ Year, hunger[hunger$sex == "Female"])
lmF <- lm(Numeric ~ Year, hunger[hunger$sex == "Female", ])
View(hunger)
lmF <- lm(Numeric ~ Year, hunger[hunger$Sex == "Female", ])
lmF <- lm(Numeric[Sex == "Female"] ~ Year[Sex == "Female"], hunger)
lmM <- lm(Numeric[Sex == "Male"] ~ Year[Sex == "Male"], hunger)
lmM$coef[2]
lmBoth <- lm(Numeric ~ Year + Sex, hunger)
summary(lmBoth)
lmInter <- lm(Numeric ~ Year, Sex, Sex*Year, hunger)
lmInter <- lm(Numeric ~ Year + Sex + Sex*Year, hunger)
summary(lmInter)
fit <- lm(y ~ x, out2)
plot(fit, which = 1)
fitno <- lm(y ~ x, out2[-1, ])
plot(fit, which = 1)
plot(fitno, which = 1)
coef(fit) - coef(fitno)
head(dfbeta(fit))
resno <- out2[1, "y"] - predict(fitno, out2[1, ])
1 - resid(fit)[1] / resno
head(hatvalues(fit))
sigma <- sqrt(deviance(fit) / fit$df.residual)
rstd <- sigma * sqrt(1 - hatvalues(fit))
rstd <- resid(fit) / (sigma * sqrt(1 - hatvalues(fit)))
head(cbind(rstd, rstandard(fit)))
plot(fit, which = 3)
plot(fit, which = 2)
sigma1 <- sqrt(deviance(fitno) / fitno$df.residual)
resid(fit)[1] / (sigma1 * sqrt(1 - hatvalues(fit)[1]))
head(rstudent(fit))
dy <- predict(fitno, out2) - predict(fit, out2)
sum(dy^2) / (2 * sigma^2)
plot(fit, which = 5)
library(dplyr)
library(ggplot2)
library(reshape2)
data(mtcars)
mtcars <- mtcars %>%
mutate(transmission = factor(am, labels = c("automatic", "manual"))) %>%
select(-am)
head(mtcars)
ggplot(mtcars, aes(y = mpg, x = transmission)) +
geom_boxplot(aes(fill = transmission)) +
geom_jitter(aes(colour = mpg))
ggplot(mtcars, aes(y = mpg, x = transmission)) +
geom_boxplot(aes(fill = transmission)) +
geom_jitter(aes(size = mpg))
mtcars_long <- melt(mtcars, id.vars = c("transmission", "mpg"))
ggplot(mtcars_long, aes(y = value, x = transmission)) +
geom_boxplot(aes(fill = transmission)) +
geom_jitter(aes(size = mpg)) +
scale_x_discrete(breaks = NULL) +
facet_wrap(~ variable, scales = "free_y", nrow = 2)
ggplot(mtcars_long, aes(y = value, x = transmission)) +
geom_boxplot(aes(fill = transmission)) +
geom_jitter(aes(size = mpg), alpha = 0.6) +
scale_x_discrete(breaks = NULL) +
facet_wrap(~ variable, scales = "free_y", nrow = 2)
ggplot(mtcars_long, aes(y = value, x = transmission)) +
geom_boxplot(aes(fill = transmission)) +
geom_jitter(aes(size = mpg), alpha = 0.5) +
scale_x_discrete(breaks = NULL) +
facet_wrap(~ variable, scales = "free_y", nrow = 2)
ggplot(mtcars, aes(y = mpg, x = transmission)) +
geom_boxplot(aes(fill = transmission)) +
geom_jitter(aes(size = mpg), alpha = 0.5)
fm1 <- formula(mpg ~ transmission)
model1 <- lm(fm1, data = mtcars)
summary(model1)
fm2 <- formula(mpg ~ transmission + cyl + disp + hp + drat + wt + gear)
model2 <- lm(fm2, data = mtcars)
summary(model2)
fm3 <- formula(mpg ~ transmission + wt)
model3 <- lm(fm3, data = mtcars)
summary(model3)
fm3 <- formula(mpg ~ transmission + wt + transmission*wt)
model3 <- lm(fm3, data = mtcars)
summary(model3)
ggplot(mtcars_long, aes(y = value, x = transmission)) +
geom_boxplot(aes(fill = transmission)) +
geom_jitter(aes(size = mpg), alpha = 0.5) +
scale_x_discrete(breaks = NULL) +
facet_wrap(~ variable, scales = "free_y", nrow = 2)
fm3 <- formula(mpg ~ transmission + wt + cyl + transmission*wt)
model3 <- lm(fm3, data = mtcars)
summary(model3)
fm3 <- formula(mpg ~ wt + transmission + transmission*wt)
model3 <- lm(fm3, data = mtcars)
summary(model3)
fm3 <- formula(mpg ~ wt + transmission + wt*transmission)
model3 <- lm(fm3, data = mtcars)
summary(model3)
fm3 <- formula(mpg ~ wt + cyl + transmission + wt*transmission)
model3 <- lm(fm3, data = mtcars)
summary(model3)
fm3 <- formula(mpg ~ wt + cyl + transmission + wt*transmission + cyl*transmission)
model3 <- lm(fm3, data = mtcars)
summary(model3)
fm3 <- formula(mpg ~ wt + cyl)
model3 <- lm(fm3, data = mtcars)
summary(model3)
fm3 <- formula(mpg ~ wt)
model3 <- lm(fm3, data = mtcars)
summary(model3)
fm3 <- formula(mpg ~ cyl)
model3 <- lm(fm3, data = mtcars)
summary(model3)
wt
wt
fm3 <- formula(mpg ~ wt)
model3 <- lm(fm3, data = mtcars)
summary(model3)
fm3 <- formula(mpg ~ transmission + wt + cyl + transmission*wt + transmission*cyl)
model3 <- lm(fm3, data = mtcars)
summary(model3)
fm2 <- formula(mpg ~ transmission + cyl + disp + hp + drat + wt + gear)
model2 <- lm(fm2, data = mtcars)
summary(model2)
fmAll <- formula(mpg ~ .)
modelAll <- lm(fmAll, data = mtcars)
summary(modelAll)
p_ci <- predict(model1, mtcars, interval = "confidence")
p_ci
fm3 <- formula(mpg ~ transmission + wt + transmission*wt)
model3 <- lm(fm3, data = mtcars)
summary(model3)
fm2 <- formula(mpg ~ transmission + cyl + disp + hp + drat + wt + gear)
model2 <- lm(fm2, data = mtcars)
summary(model2)
fm2 <- formula(mpg ~ transmission + cyl)
model2 <- lm(fm2, data = mtcars)
summary(model2)
fm2 <- formula(mpg ~ transmission + cyl + wt)
model2 <- lm(fm2, data = mtcars)
summary(model2)
fm3 <- formula(mpg ~ wt + transmission)
model3 <- lm(fm3, data = mtcars)
summary(model3)
fm3 <- formula(mpg ~ wt + transmission + wt*transmission)
model3 <- lm(fm3, data = mtcars)
summary(model3)
fm3 <- formula(mpg ~ wt + wt*transmission)
model3 <- lm(fm3, data = mtcars)
summary(model3)
fm3 <- formula(mpg ~ wt + wt + wt*transmission)
model3 <- lm(fm3, data = mtcars)
summary(model3)
fm4 <- formula(mpg ~ transmission + wt + cyl + transmission*wt + transmission*cyl)
model4 <- lm(fm4, data = mtcars)
summary(model4)
fm4 <- formula(mpg ~ wt + transmission + wt*transmission + cyl + cyl*transmission)
model4 <- lm(fm4, data = mtcars)
summary(model4)
fm4 <- formula(mpg ~ wt + transmission + cyl + wt*cyl*transmission)
model4 <- lm(fm4, data = mtcars)
summary(model4)
fm4 <- formula(mpg ~ wt + transmission + wt*transmission + cyl + cyl*transmission)
model4 <- lm(fm4, data = mtcars)
summary(model4)
library(dplyr)
library(ggplot2)
library(reshape2)
data(mtcars)
mtcars <- mtcars %>%
mutate(transmission = factor(am, labels = c("automatic", "manual"))) %>%
select(-am)
head(mtcars)
cov2cor(cov(mtcars))
data(mtcars)
cov2cor(cov(mtcars))
?mtcars
cov2cor(cov(mtcars))[c("mpg", "am"), ]
data(mtcars)
mtcars <- mtcars %>%
mutate(transmission = factor(am, labels = c("automatic", "manual"))) %>%
select(-am)
head(mtcars)
ggplot(mtcars, aes(y = mpg, x = transmission)) +
geom_boxplot(aes(fill = transmission)) +
geom_jitter(aes(size = mpg), alpha = 0.5)
mtcars_long <- melt(mtcars, id.vars = c("transmission", "mpg"))
ggplot(mtcars_long, aes(y = value, x = transmission)) +
geom_boxplot(aes(fill = transmission)) +
geom_jitter(aes(size = mpg), alpha = 0.5) +
scale_x_discrete(breaks = NULL) +
facet_wrap(~ variable, scales = "free_y", nrow = 2)
fm1 <- formula(mpg ~ transmission)
model1 <- lm(fm1, data = mtcars)
summary(model1)
fmAll <- formula(mpg ~ .)
modelAll <- lm(fmAll, data = mtcars)
summary(modelAll)
fm3 <- formula(mpg ~ transmission + disp + drat + wt + gear)
model3 <- lm(fm3, data = mtcars)
summary(model3)
fm3 <- formula(mpg ~ transmission + drat + wt + gear)
model3 <- lm(fm3, data = mtcars)
summary(model3)
fm3 <- formula(mpg ~ wt + transmission)
model3 <- lm(fm3, data = mtcars)
summary(model3)
fm4 <- formula(mpg ~ wt + transmission + wt*transmission)
model4 <- lm(fm4, data = mtcars)
summary(model4)
anova(model3, model4)
plot(residuals(model3))
plot(residuals(model4))
plot(residuals(model2))
plot(residuals(model1))
cor(mtcars)
?anova
anova(model4, model3)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = residuals, y = yhat)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth()
ggplot(residPred, aes(x = residuals, y = yhat)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "lm")
ggplot(residPred, aes(x = residuals, y = yhat)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
residPred <- data.frame(residuals = residuals(model3), yhat = predict(model4))
ggplot(residPred, aes(x = residuals, y = yhat)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
s <- sqrt(deviance(model4)/df.residual(model4))
rs <- residPred$residuals/s
rs
fm4 <- formula(mpg ~ wt + transmission)
model4 <- lm(fm4, data = mtcars)
summary(model4)
fm4 <- formula(mpg ~ wt + transmission + cyl)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = residuals, y = yhat)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
plot(residuals(model4))
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm4 <- formula(mpg ~ wt + transmission + wt*transmission)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm4 <- formula(mpg ~ wt + transmission + wt*transmission + cyl)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm4 <- formula(mpg ~ wt + transmission + wt*transmission + cyl + cyl*transmission)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm4 <- formula(mpg ~ wt + transmission + wt*transmission + cyl)
model4 <- lm(fm4, data = mtcars)
summary(model4)
fm4 <- formula(mpg ~ wt + transmission + cyl)
model4 <- lm(fm4, data = mtcars)
summary(model4)
data(mtcars)
mtcarsNum <- mtcars
cor(mtcarsNum)
cor(mtcarsNum)[c("mpg", "am"), ]
fm4 <- formula(mpg ~ wt + transmission + cyl + disp)
model4 <- lm(fm4, data = mtcars)
summary(model4)
fm4 <- formula(mpg ~ wt + transmission + cyl + disp)
model4 <- lm(fm4, data = mtcars)
summary(model4)
fm4 <- formula(mpg ~ wt + transmission + disp)
model4 <- lm(fm4, data = mtcars)
summary(model4)
names(mtcars)
mtcars <- mtcars %>%
mutate(transmission = factor(am, labels = c("automatic", "manual"))) %>%
select(-am)
head(mtcars)
fm4 <- formula(mpg ~ wt + transmission + disp)
model4 <- lm(fm4, data = mtcars)
summary(model4)
fm4 <- formula(mpg ~ wt + transmission + cyl + disp)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm4 <- formula(mpg ~ wt + transmission + cyl)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm4 <- formula(mpg ~ wt + transmission + disp)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm4 <- formula(mpg ~ wt + transmission + disp + disp*transmission)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm4 <- formula(mpg ~ wt + transmission + wt*transmission + disp + disp*transmission)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm4 <- formula(mpg ~ wt + transmission + wt*transmission + cyl + cyl*transmission)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
s <- sqrt(deviance(model4)/df.residual(model4))
rs <- residPred$residuals/s
rs
sum(rs)
fm3 <- formula(mpg ~ transmission + drat + wt + gear)
model3 <- lm(fm3, data = mtcars)
summary(model3)
residPred <- data.frame(residuals = residuals(model3), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm3 <- formula(mpg ~ wt + transmission)
model3 <- lm(fm3, data = mtcars)
summary(model3)
residPred <- data.frame(residuals = residuals(model), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fmAll <- formula(mpg ~ .)
modelAll <- lm(fmAll, data = mtcars)
summary(modelAll)
residPred <- data.frame(residuals = residuals(modelAll), yhat = predict(modelAll))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
residPred <- data.frame(residuals = residuals(model3), yhat = predict(model3))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm2 <- formula(mpg ~ transmission + drat + wt + gear)
model2 <- lm(fm2, data = mtcars)
summary(model2)
residPred <- data.frame(residuals = residuals(model2), yhat = predict(model2))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
cor(mtcarsNum)[c("mpg", "am"), ]
?mtcars
fm2 <- formula(mpg ~ transmission + drat + wt + gear)
model2 <- lm(fm2, data = mtcars)
summary(model2)
fm2 <- formula(mpg ~ transmission + drat + wt + gear)
model2 <- lm(fm2, data = mtcars)
summary(model2)
residPred <- data.frame(residuals = residuals(model2), yhat = predict(model2))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
residPred <- data.frame(residuals = residuals(modelAll),
yhat = predict(modelAll))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fmAll <- formula(mpg ~ .)
modelAll <- lm(fmAll, data = mtcars)
summary(modelAll)
cor(mtcarsNum)[c("mpg", "am"), ]
ggplot(mtcars, aes(y = mpg, x = transmission)) +
geom_boxplot(aes(fill = transmission)) +
geom_jitter(aes(size = mpg), alpha = 0.5) +
theme(title = "Figure 1")
ggplot(mtcars, aes(y = mpg, x = transmission)) +
geom_boxplot(aes(fill = transmission)) +
geom_jitter(aes(size = mpg), alpha = 0.5) +
labs(title = "Figure 1")
install.packages("lmodern")
