model4 <- lm(fm4, data = mtcars)
summary(model4)
fm4 <- formula(mpg ~ wt + transmission + cyl)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = residuals, y = yhat)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
plot(residuals(model4))
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm4 <- formula(mpg ~ wt + transmission + wt*transmission)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm4 <- formula(mpg ~ wt + transmission + wt*transmission + cyl)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm4 <- formula(mpg ~ wt + transmission + wt*transmission + cyl + cyl*transmission)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm4 <- formula(mpg ~ wt + transmission + wt*transmission + cyl)
model4 <- lm(fm4, data = mtcars)
summary(model4)
fm4 <- formula(mpg ~ wt + transmission + cyl)
model4 <- lm(fm4, data = mtcars)
summary(model4)
data(mtcars)
mtcarsNum <- mtcars
cor(mtcarsNum)
cor(mtcarsNum)[c("mpg", "am"), ]
fm4 <- formula(mpg ~ wt + transmission + cyl + disp)
model4 <- lm(fm4, data = mtcars)
summary(model4)
fm4 <- formula(mpg ~ wt + transmission + cyl + disp)
model4 <- lm(fm4, data = mtcars)
summary(model4)
fm4 <- formula(mpg ~ wt + transmission + disp)
model4 <- lm(fm4, data = mtcars)
summary(model4)
names(mtcars)
mtcars <- mtcars %>%
mutate(transmission = factor(am, labels = c("automatic", "manual"))) %>%
select(-am)
head(mtcars)
fm4 <- formula(mpg ~ wt + transmission + disp)
model4 <- lm(fm4, data = mtcars)
summary(model4)
fm4 <- formula(mpg ~ wt + transmission + cyl + disp)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm4 <- formula(mpg ~ wt + transmission + cyl)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm4 <- formula(mpg ~ wt + transmission + disp)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm4 <- formula(mpg ~ wt + transmission + disp + disp*transmission)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm4 <- formula(mpg ~ wt + transmission + wt*transmission + disp + disp*transmission)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm4 <- formula(mpg ~ wt + transmission + wt*transmission + cyl + cyl*transmission)
model4 <- lm(fm4, data = mtcars)
summary(model4)
residPred <- data.frame(residuals = residuals(model4), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
s <- sqrt(deviance(model4)/df.residual(model4))
rs <- residPred$residuals/s
rs
sum(rs)
fm3 <- formula(mpg ~ transmission + drat + wt + gear)
model3 <- lm(fm3, data = mtcars)
summary(model3)
residPred <- data.frame(residuals = residuals(model3), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm3 <- formula(mpg ~ wt + transmission)
model3 <- lm(fm3, data = mtcars)
summary(model3)
residPred <- data.frame(residuals = residuals(model), yhat = predict(model4))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fmAll <- formula(mpg ~ .)
modelAll <- lm(fmAll, data = mtcars)
summary(modelAll)
residPred <- data.frame(residuals = residuals(modelAll), yhat = predict(modelAll))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
residPred <- data.frame(residuals = residuals(model3), yhat = predict(model3))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fm2 <- formula(mpg ~ transmission + drat + wt + gear)
model2 <- lm(fm2, data = mtcars)
summary(model2)
residPred <- data.frame(residuals = residuals(model2), yhat = predict(model2))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
cor(mtcarsNum)[c("mpg", "am"), ]
?mtcars
fm2 <- formula(mpg ~ transmission + drat + wt + gear)
model2 <- lm(fm2, data = mtcars)
summary(model2)
fm2 <- formula(mpg ~ transmission + drat + wt + gear)
model2 <- lm(fm2, data = mtcars)
summary(model2)
residPred <- data.frame(residuals = residuals(model2), yhat = predict(model2))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
residPred <- data.frame(residuals = residuals(modelAll),
yhat = predict(modelAll))
ggplot(residPred, aes(x = yhat, y = residuals)) +
geom_point() +
xlab("Fitted values") +
ylab("Residuals") +
geom_hline(yintercept = 0) +
geom_smooth(method = "loess")
fmAll <- formula(mpg ~ .)
modelAll <- lm(fmAll, data = mtcars)
summary(modelAll)
cor(mtcarsNum)[c("mpg", "am"), ]
ggplot(mtcars, aes(y = mpg, x = transmission)) +
geom_boxplot(aes(fill = transmission)) +
geom_jitter(aes(size = mpg), alpha = 0.5) +
theme(title = "Figure 1")
ggplot(mtcars, aes(y = mpg, x = transmission)) +
geom_boxplot(aes(fill = transmission)) +
geom_jitter(aes(size = mpg), alpha = 0.5) +
labs(title = "Figure 1")
install.packages("lmodern")
data(mtcars)
model <- lm(mpg ~ cyl + wt)
model <- lm(mpg ~ cyl + wt, mtcars)
summary(model)
str(mtcars)
coef(model)
coef(model)[1]
coef(model)[2] * 2
str(mtrcars$cyl)
str(mtcars$cyl)
levels(mtcars$cyl)
unique(mtcars$cyl)
model <- lm(mpg ~ factor(cyl) + wt, mtcars)
summary(model)
summary(lm(mpg ~ factor(cyl), mtcars))
model1 <- lm(mpg ~ factor(cyl) + wt + factor(cyl*), mtcars)
model1 <- lm(mpg ~ factor(cyl) + wt + factor(cyl)*wt, mtcars)
model2 <- lm(mpg ~ factor(cyl) + wt, mtcars)
anova(model1, model2)
anova(model2, model1)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
hatvalues(lm(y ~ x))
dfbeta(lm(y ~ x))
dffits(lm(y ~ x))
dfbetas(lm(y ~ x))
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
lm(mpg ~ wt + factor(cyl), mtcars)
library(swirl)
swirl()
rgp1()
rpg2()
rgp2()
head(swiss)
mdl <- lm(Fertility ~ ., swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ Agriculture + Education + Catholic + Infant.Mortality, swiss)
vif(mdl2)
library(shiny)
library(swirl)
swirl()
simbias()
x1c <- simbias()
apply(x1c, 1, mean)
fit1 <- lm(Fertility ~ Agriculture)
fit1 <- lm(Fertility ~ Agriculture, swiss)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education)
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
anova(fit1, fit3)
deviance(fit3)
d <- deviance(fit3) / 43
n <- deviance(fit1) - deviance(fit3)
n <- (deviance(fit1) - deviance(fit3)) / 2
n/d
pf(n/d, 2, 43, lower.tail = FALSE)
shapiro.test(fit3$residuals)
anova(fit1, fit3, fit5, fit6)
library(swirl)
swirl()
ravenData
mdl <- glm(ravenWinNum ~ ravenScore, ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, ravenData, family = "binomial")
lodds <- predict(mdl, data.frame(ravenScore = c(0, 3, 6)))
exp(lodds)/(1 + exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
var(rpois(1000, 50))
nxt()
head(hits)
class(hits[, "date"])
as.integer(head(hits[, "date"]))
mdl <- glm(visits ~ date, family = poisson, data = hits)
summary(mdl)
exp(confint(mdl, "date"))
which.max(hits[, "visits"])
hits[704, ]
lambda <- mdl$fitted.values[704]
qpois(.95, lambda)
mdl2 <- glm(log(simplystats) ~ date, offset = log(visits + 1), data = hits)
mdl2 <- glm(simplystats ~ date, offset = log(visits + 1), data = hits)
mdl2 <- glm(simplystats ~ date, family = poisson, offset = log(visits + 1), data = hits)
qpois(.95, mdl$fitted.values[704])
qpois(.95, mdl2$fitted.values[704])
n <- 4900
i <- n/200
l <- n/i
ints <- findInterval(1:n, seq(1, n, l))
n <- 4900
i <- n/200
l <- n/i
ints <- findInterval(1:n, seq(1, n, l))
library(dplyr)
test <- data.frame(pos = 1:n, interval = factor(ints)) %>% group_by(interval) %>% summarise(count = length(pos))
View(test)
n <- 4900
i <- ceiling(n/200)
l <- n/i
ints <- findInterval(1:n, seq(1, n, l))
test <- data.frame(pos = 1:n, interval = factor(ints)) %>%
group_by(interval) %>%
summarise(count = length(pos))
View(test)
n <- 21074
i <- ceiling(n/200)
l <- n/i
ints <- findInterval(1:n, seq(1, n, l))
test <- data.frame(pos = 1:n, interval = factor(ints)) %>%
group_by(interval) %>%
summarise(count = length(pos))
View(test)
n <- 21004
i <- ceiling(n/200)
l <- n/i
ints <- findInterval(1:n, seq(1, n, l))
test <- data.frame(pos = 1:n, interval = factor(ints)) %>%
group_by(interval) %>%
summarise(count = length(pos))
View(test)
n <- 20174
i <- ceiling(n/200)
l <- n/i
ints <- findInterval(1:n, seq(1, n, l))
test <- data.frame(pos = 1:n, interval = factor(ints)) %>%
group_by(interval) %>%
summarise(count = length(pos))
View(test)
n <- 20134
i <- ceiling(n/200)
l <- n/i
ints <- findInterval(1:n, seq(1, n, l))
test <- data.frame(pos = 1:n, interval = factor(ints)) %>%
group_by(interval) %>%
summarise(count = length(pos))
View(test)
n <- 20114
i <- ceiling(n/200)
l <- n/i
ints <- findInterval(1:n, seq(1, n, l))
test <- data.frame(pos = 1:n, interval = factor(ints)) %>%
group_by(interval) %>%
summarise(count = length(pos))
View(test)
n <- 11114
i <- ceiling(n/200)
l <- n/i
ints <- findInterval(1:n, seq(1, n, l))
test <- data.frame(pos = 1:n, interval = factor(ints)) %>%
group_by(interval) %>%
summarise(count = length(pos))
View(test)
setwd("~/Google Drive/MyCode/Projects/ampSynapseProjects/genomeImputing/data/gwas_results/SYounkin_MayoGWAS_09-05-08.by_chr/")
chrBIM <- read.table("SYounkin_MayoGWAS_09-05-08.chr1.bim")
n <- nrow(chrBIM)
i <- ceiling(n/200)
l <- n/i
ints <- findInterval(1:n, seq(1, n, l))
test <- data.frame(pos = 1:n, interval = factor(ints)) %>%
group_by(interval) %>%
summarise(count = length(pos))
View(test)
n <- 542
i <- ceiling(n/200)
l <- n/i
ints <- findInterval(1:n, seq(1, n, l))
test <- data.frame(pos = 1:n, interval = factor(ints)) %>%
group_by(interval) %>%
summarise(count = length(pos))
View(test)
?step
?shuttle
library(MASS)
?shuttle
model <- glm(use ~ wind, family = binomial, data = shuttle)
summary(shuttle)
summary(model)
coef(model)[2]
coef(model)[2] / (1 + coef(model)[2])
exp(coef(model)[2])
model <- glm(use ~ wind + magn, family = binomial, data = shuttle)
summary(model)
exp(coef(model)[2])
model <- glm(I(1 - use) ~ wind, family = binomial, data = shuttle)
relevel(shuttle$use)
data(shuttle)
head(shuttle)
levels(shuttle$use)
relevel(shuttle$use, "noauto")
shuttle$use <- relevel(shuttle$use, "noauto")
model <- glm(use ~ wind, family = binomial, data = shuttle)
summary(model)
data(InsectSprays)
head(InsectSprays)
model <- glm(count ~ factor(spray), family = poisson, data = InsectSprays)
summary(model)
exp(coef(model[2]))
exp(coef(model)[2])
exp(coef(model)[2]) / exp(coef(model)[1])
exp(coef(model)[1]) / exp(coef(model)[2])
exp(1 - coef(model[2]))
1 - exp(coef(model)[2])
exp(1 - coef(model)[2])
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knot <- 0
splineTerms <- sapply(knot, function(knot) (x > knot) * (k - knot))
splineTerms <- sapply(knot, function(knot) (x > knot) * (x - knot))
splineTerms
x
xMat <- cbind(1, x, splineTerms)
xMat
yhat <- predict(lm(y ~ xMat - 1))
yhat
model <- lm(y ~ xMat - 1)
summary(model)
model <- glm(count ~ factor(spray) -1, family = poisson, data = InsectSprays)
summary(model)
exp(coef(model)[2] - coef(model)[1])
exp(coef(model)[1] - coef(model)[2])
model <- glm(count ~ factor(spray), family = poisson, data = InsectSprays)
summary(model)
model <- glm(count ~ factor(spray) - 1, family = poisson, data = InsectSprays)
exp(coef(model)[1] - coef(model)[2])
exp(coef(model)[2] - coef(model)[1])
exp(0.05588)
1/exp(0.05588)
knot <- 0
splineTerms <- sapply(knot, function(knot) (x > knot) * (x - knot))
xMat <- cbind(1, x, splineTerms)
yhat <- predict(lm(y ~ xMat - 1))
model <- lm(y ~ xMat - 1)
summary(model)
plot(x, y, frame=FALSE, pch=21, bg="lightblue", cex=2)
lines(x,yhat,col="red",lwd=2)
exp(coef(model)[3])
coef(model)[3]
exp(2)
coef(model)[3]-coef(model)[1]
data(swiss)
head(swiss)
data(accdeaths)
head(accdeaths)
data(deaths)
head(deaths)
data(AirPassengers)
head(AirPassengers)
data(JohnsonJohnson)
head(JohnsonJohnson)
data(swiss)
head(swiss)
download.file("https://dl.dropboxusercontent.com/u/7710864/data/gaData.rda",destfile="./data/gaData.rda")
download.file("https://dl.dropboxusercontent.com/u/7710864/data/gaData.rda",
destfile="./data/gaData.rda", method = "curl")
load("./data/gaData.rda")
gaData$julian <- julian(gaData$date)
model <- glm(simplystats ~ julian, offset = log(visits + 1), family = poisson,
data = gaData)
summary(model)
View(gaData)
library(dplyr)
countData <- gaData %>%
mutate(count = visits + simplystats,
x = factor(ifelse(simplystats > 0, 1, 0)))
View(countData)
model <- glm(count ~ x, offset = log(julian), family = poisson,
data = gaData)
summary(model)
model <- glm(count ~ x, offset = log(julian), family = poisson,
data = gaData)
model <- glm(count ~ x, offset = log(julian), family = poisson,
data = countData)
summary(model)
model <- glm(count ~ x, offset = log(julian) + log(10), family = poisson,
data = countData)
summary(model)
t <- log(countData$julia)
model <- glm(count ~ x, offset = t, family = poisson,
data = countData)
summary(model)
t2 <- log(10) + t
model <- glm(count ~ x, offset = t2, family = poisson,
data = countData)
summary(model)
